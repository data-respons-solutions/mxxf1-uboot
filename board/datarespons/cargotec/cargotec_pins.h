#ifndef __CARGOTEC_PINS_H__
#define __CARGOTEC_PINS_H__

static iomux_v3_cfg_t const uart1_pads[] = {
	IOMUX_PADS(PAD_CSI0_DAT10__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT11__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_GPIO_18__GPIO7_IO13	      | MUX_PAD_CTRL(INPUT_PD_PAD_CTRL)),
};

static iomux_v3_cfg_t const uart2_pads[] = {
	IOMUX_PADS(PAD_EIM_D26__UART2_TX_DATA 	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_EIM_D27__UART2_RX_DATA 	| MUX_PAD_CTRL(UART_PAD_CTRL)),
};

static iomux_v3_cfg_t const uart3_pads[] = {
	IOMUX_PADS(PAD_EIM_D24__UART3_TX_DATA 	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_EIM_D25__UART3_RX_DATA 	| MUX_PAD_CTRL(UART_PAD_CTRL)),
};

static iomux_v3_cfg_t const uart4_pads[] = {
	IOMUX_PADS(PAD_KEY_COL0__UART4_TX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_KEY_ROW0__UART4_RX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),

};

static iomux_v3_cfg_t const uart5_pads_dte[] = {
	IOMUX_PADS(PAD_CSI0_DAT14__UART5_TX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT15__UART5_RX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT18__UART5_RTS_B		| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT19__UART5_CTS_B		| MUX_PAD_CTRL(UART_PAD_CTRL)),
};

static iomux_v3_cfg_t const uart5_pads_dce[] = {
	IOMUX_PADS(PAD_CSI0_DAT14__UART5_RX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT15__UART5_TX_DATA	| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT18__UART5_CTS_B		| MUX_PAD_CTRL(UART_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT19__UART5_RTS_B		| MUX_PAD_CTRL(UART_PAD_CTRL)),
};

static iomux_v3_cfg_t const enet_pads[] = {
	IOMUX_PADS(PAD_ENET_MDIO__ENET_MDIO	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_ENET_MDC__ENET_MDC		| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TXC__RGMII_TXC	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TD0__RGMII_TD0	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TD1__RGMII_TD1	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TD2__RGMII_TD2	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TD3__RGMII_TD3	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_TX_CTL__RGMII_TX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_ENET_REF_CLK__ENET_TX_CLK	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RXC__RGMII_RXC	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RD0__RGMII_RD0	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RD1__RGMII_RD1	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RD2__RGMII_RD2	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RD3__RGMII_RD3	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_RGMII_RX_CTL__RGMII_RX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL)),
	IOMUX_PADS(PAD_ENET_RXD1__GPIO1_IO26	| MUX_PAD_CTRL(WEAK_PULLUP)),			/* Phy Irq */
	/* AR8031 PHY Reset */
	IOMUX_PADS(PAD_ENET_CRS_DV__GPIO1_IO25		| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* Phy reset (low) */
};


static iomux_v3_cfg_t const usdhc3_pads[] = {
	IOMUX_PADS(PAD_SD3_CLK__SD3_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_CMD__SD3_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT0__SD3_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT1__SD3_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT2__SD3_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT3__SD3_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT4__SD3_DATA4 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT5__SD3_DATA5 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT6__SD3_DATA6 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_DAT7__SD3_DATA7 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD3_RST__SD3_RESET  | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
};

static iomux_v3_cfg_t const usdhc4_pads[] = {
	IOMUX_PADS(PAD_SD4_CLK__SD4_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD4_CMD__SD4_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD4_DAT0__SD4_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD4_DAT1__SD4_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD4_DAT2__SD4_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
	IOMUX_PADS(PAD_SD4_DAT3__SD4_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL)),
};

static iomux_v3_cfg_t const ecspi1_pads[] = {
	IOMUX_PADS(PAD_EIM_D16__ECSPI1_SCLK 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_EIM_D17__ECSPI1_MISO 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_EIM_D18__ECSPI1_MOSI 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_EIM_D19__GPIO3_IO19 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),	/* Use GPIO for CS 	*/
};

static iomux_v3_cfg_t const ecspi2_pads[] = {
	IOMUX_PADS(PAD_DISP0_DAT19__ECSPI2_SCLK 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_DISP0_DAT17__ECSPI2_MISO 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_DISP0_DAT16__ECSPI2_MOSI 	| MUX_PAD_CTRL(SPI_PAD_CTRL)),
	IOMUX_PADS(PAD_DISP0_DAT18__GPIO5_IO12 | MUX_PAD_CTRL(SPI_PAD_CTRL)),	/* Use GPIO for CS 	*/
	IOMUX_PADS(PAD_DISP0_DAT15__GPIO5_IO09 | MUX_PAD_CTRL(SPI_PAD_CTRL)),	/* Use GPIO for CS 	*/
};

static iomux_v3_cfg_t const hw_settings_pads[] = {
	IOMUX_PADS(PAD_DISP0_DAT0__GPIO4_IO21	| MUX_PAD_CTRL(NO_PULLUP)),	/* HW_Setting 0*/
	IOMUX_PADS(PAD_DISP0_DAT1__GPIO4_IO22	| MUX_PAD_CTRL(NO_PULLUP)),	/* HW Setting 1 */
	IOMUX_PADS(PAD_DISP0_DAT2__GPIO4_IO23	| MUX_PAD_CTRL(NO_PULLUP)),	/* HW Setting 2 */
};

static iomux_v3_cfg_t const otg_pads[] = {
	IOMUX_PADS(PAD_EIM_D21__USB_OTG_OC	 	| MUX_PAD_CTRL(WEAK_PULLUP)),
	IOMUX_PADS(PAD_EIM_D22__USB_OTG_PWR 	| MUX_PAD_CTRL(NO_PULLUP)),
	IOMUX_PADS(PAD_KEY_ROW1__GPIO4_IO09 	| MUX_PAD_CTRL(NO_PULLUP)),	/* Note that this is not default, need DT config */
	IOMUX_PADS(PAD_ENET_RX_ER__USB_OTG_ID 	| MUX_PAD_CTRL(WEAK_PULLUP)),
};

static iomux_v3_cfg_t const can1_pads[] = {
	IOMUX_PADS(PAD_KEY_COL2__GPIO4_IO10		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP_CAN1_EN */
	IOMUX_PADS(PAD_KEY_COL3__GPIO4_IO12		| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_CAN1_STB */
	IOMUX_PADS(PAD_EIM_D31__GPIO3_IO31		| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GP_CAN1_RES_EN */
	IOMUX_PADS(PAD_GPIO_7__FLEXCAN1_TX		| MUX_PAD_CTRL(NO_PULLUP)),
	IOMUX_PADS(PAD_GPIO_8__FLEXCAN1_RX		| MUX_PAD_CTRL(WEAK_PULLUP)),
	IOMUX_PADS(PAD_DI0_PIN2__GPIO4_IO18		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP_CAN1_WAKE */
};

static iomux_v3_cfg_t const can2_pads[] = {
	IOMUX_PADS(PAD_GPIO_9__GPIO1_IO09		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP_CAN2_EN */
	IOMUX_PADS(PAD_GPIO_2__GPIO1_IO02		| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_CAN2_STB */
	IOMUX_PADS(PAD_GPIO_6__GPIO1_IO06		| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GP_CAN2_RES_EN */
	IOMUX_PADS(PAD_KEY_COL4__FLEXCAN2_TX	| MUX_PAD_CTRL(NO_PULLUP)),
	IOMUX_PADS(PAD_KEY_ROW4__FLEXCAN2_RX	| MUX_PAD_CTRL(WEAK_PULLUP)),
	IOMUX_PADS(PAD_DI0_PIN3__GPIO4_IO19		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP_CAN2_WAKE */
};

static iomux_v3_cfg_t const wwan_pads[] = {
	IOMUX_PADS(PAD_DISP0_DAT5__GPIO4_IO26	| MUX_PAD_CTRL(NO_PULLUP)),	/* GP_EN_PWR--ANT_GPS */
	IOMUX_PADS(PAD_DISP0_DAT6__GPIO4_IO27	| MUX_PAD_CTRL(NO_PULLUP)),	/* GP_nPRST_WWAN */
	IOMUX_PADS(PAD_DISP0_DAT7__GPIO4_IO28	| MUX_PAD_CTRL(NO_PULLUP)),	/* GP_nDISABLE_WWAN   */
	IOMUX_PADS(PAD_DISP0_DAT8__GPIO4_IO29	| MUX_PAD_CTRL(NO_PULLUP)),	/* GP_nWAKE_L--WWAN   */
	IOMUX_PADS(PAD_DISP0_DAT9__GPIO4_IO30	| MUX_PAD_CTRL(NO_PULLUP)),	/* LED_nWWAN   */
};

static iomux_v3_cfg_t const other_pads[] = {
	IOMUX_PADS(PAD_KEY_COL1__GPIO4_IO08		| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GP_NRESET_TPM */

	IOMUX_PADS(PAD_CSI0_DAT16__GPIO6_IO02	| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP-EN--BUCK_5V--CPU */

	IOMUX_PADS(PAD_GPIO_0__ASRC_EXT_CLK		| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* External audio clk */
	IOMUX_PADS(PAD_GPIO_1__WDOG2_B			| MUX_PAD_CTRL(NO_PULLUP)),

	IOMUX_PADS(PAD_NANDF_CLE__GPIO6_IO07	| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP--BT_HOST_WAKE */
	IOMUX_PADS(PAD_NANDF_CS0__GPIO6_IO11	| MUX_PAD_CTRL(WEAK_PULLDOWN)),		/* GP--WL_VDDIO_EN */
	IOMUX_PADS(PAD_NANDF_ALE__GPIO6_IO08	| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP--BT_WAKE */
	IOMUX_PADS(PAD_NANDF_RB0__GPIO6_IO10	| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* PMIC_INT_B */
	IOMUX_PADS(PAD_NANDF_D3__GPIO2_IO03		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* WL_REG_ON (WiFI power) */
	IOMUX_PADS(PAD_NANDF_D4__GPIO2_IO04		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* BT_REG_ON (Bluetooth power) */
	IOMUX_PADS(PAD_NANDF_D5__GPIO2_IO05		| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* WL_IRQ (WiFI interrupt */
	IOMUX_PADS(PAD_NANDF_D6__GPIO2_IO06		| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* GP--WL_HOST_WAKE */
	IOMUX_PADS(PAD_NANDF_D7__GPIO2_IO07		| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* GP--WL_DEV_WAKE */
	IOMUX_PADS(PAD_EIM_D23__GPIO3_IO23		| MUX_PAD_CTRL(NO_PULLUP)),		/* GP--WL_BAT_PWR_EN */

	IOMUX_PADS(PAD_EIM_D29__GPIO3_IO29		| MUX_PAD_CTRL(WEAK_PULLUP)),	/* PPWR_BTN_SNS */
	IOMUX_PADS(PAD_CSI0_DAT4__AUD3_TXC		| MUX_PAD_CTRL(NO_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT5__AUD3_TXD		| MUX_PAD_CTRL(NO_PAD_CTRL)),

	IOMUX_PADS(PAD_CSI0_DAT6__AUD3_TXFS		| MUX_PAD_CTRL(NO_PAD_CTRL)),
	IOMUX_PADS(PAD_CSI0_DAT7__AUD3_RXD		| MUX_PAD_CTRL(NO_PAD_CTRL)),
	IOMUX_PADS(PAD_SD2_DAT1__GPIO1_IO14		| MUX_PAD_CTRL(INPUT_PD_PAD_CTRL)),	/* GPI_2 */
	IOMUX_PADS(PAD_SD2_DAT2__GPIO1_IO13		| MUX_PAD_CTRL(INPUT_PD_PAD_CTRL)),	/* GPI_3 */
	IOMUX_PADS(PAD_SD2_DAT3__GPIO1_IO12		| MUX_PAD_CTRL(INPUT_PD_PAD_CTRL)),	/* GPI_1 */

	IOMUX_PADS(PAD_ENET_TXD1__GPIO1_IO29	| MUX_PAD_CTRL(NO_PAD_CTRL)),	/* USB_H1_PWR */

	IOMUX_PADS(PAD_DI0_PIN15__GPIO4_IO17	| MUX_PAD_CTRL(WEAK_PULLDOWN)),		/* MCU Boot0 */
	IOMUX_PADS(PAD_DISP0_DAT3__GPIO4_IO24	| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_EN--GPO1  */
	IOMUX_PADS(PAD_DISP0_DAT4__GPIO4_IO25	| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_EN--GPO2  */
	IOMUX_PADS(PAD_DISP0_DAT21__GPIO5_IO15	| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GPO_nINT_MCU */
	IOMUX_PADS(PAD_DISP0_DAT22__GPIO5_IO16	| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* EN_ANI_1 */
	IOMUX_PADS(PAD_DISP0_DAT23__GPIO5_IO17	| MUX_PAD_CTRL(WEAK_PULLDOWN)),	/* EN_ANI_2 */
	IOMUX_PADS(PAD_DISP0_DAT10__GPIO4_IO31 	| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GP_Status--CPU */
};

static iomux_v3_cfg_t const revab_pads[] = {
	IOMUX_PADS(PAD_GPIO_4__GPIO1_IO04		| MUX_PAD_CTRL(WEAK_PULLUP)),	/* GP_NRST_MCU1 */
};


static iomux_v3_cfg_t const revc_pads[] = {
	IOMUX_PADS(PAD_SD1_CMD__GPIO1_IO18		| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_LED_G_STATUS */
	IOMUX_PADS(PAD_SD1_CLK__GPIO1_IO20		| MUX_PAD_CTRL(NO_PULLUP)),		/* GP_LED_R_STATUS */
	IOMUX_PADS(PAD_SD1_DAT0__GPIO1_IO16		| MUX_PAD_CTRL(NO_PULLUP)),		/* CAN1_ERR_N */
	IOMUX_PADS(PAD_SD1_DAT1__GPIO1_IO17		| MUX_PAD_CTRL(NO_PULLUP)),		/* CAN2_ERR_N */
	IOMUX_PADS(PAD_GPIO_4__GPIO1_IO04		| MUX_PAD_CTRL(NO_PULLUP)),	/* GP_NRST_MCU1 */
};

static struct i2c_pads_info mx6dl_i2c_pad_info0 = {
	.scl = {
		.i2c_mode = MX6DL_PAD_CSI0_DAT9__I2C1_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_CSI0_DAT9__GPIO5_IO27 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(5, 27)
	},
	.sda = {
		.i2c_mode = MX6DL_PAD_CSI0_DAT8__I2C1_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_CSI0_DAT8__GPIO5_IO26 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(5, 26)
	}
};

static struct i2c_pads_info mx6q_i2c_pad_info0 = {
	.scl = {
		.i2c_mode = MX6Q_PAD_CSI0_DAT9__I2C1_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_CSI0_DAT9__GPIO5_IO27 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(5, 27)
	},
	.sda = {
		.i2c_mode = MX6Q_PAD_CSI0_DAT8__I2C1_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_CSI0_DAT8__GPIO5_IO26 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(5, 26)
	}
};

static struct i2c_pads_info mx6dl_i2c_pad_info1 = {
	.scl = {
		.i2c_mode = MX6DL_PAD_KEY_COL3__I2C2_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_KEY_COL3__GPIO4_IO12 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(4, 12)
	},
	.sda = {
		.i2c_mode = MX6DL_PAD_KEY_ROW3__I2C2_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_KEY_ROW3__GPIO4_IO13 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(4, 13)
	}
};

static struct i2c_pads_info mx6q_i2c_pad_info1 = {
	.scl = {
		.i2c_mode = MX6Q_PAD_KEY_COL3__I2C2_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_KEY_COL3__GPIO4_IO12 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(4, 12)
	},
	.sda = {
		.i2c_mode = MX6Q_PAD_KEY_ROW3__I2C2_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_KEY_ROW3__GPIO4_IO13 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(4, 13)
	}
};

static struct i2c_pads_info mx6dl_i2c_pad_info2 = {
	.scl = {
		.i2c_mode = MX6DL_PAD_GPIO_3__I2C3_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_GPIO_3__GPIO1_IO03 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(1, 3)
	},
	.sda = {
		.i2c_mode = MX6DL_PAD_GPIO_16__I2C3_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_GPIO_16__GPIO7_IO11 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(1, 6)
	}
};

static struct i2c_pads_info mx6q_i2c_pad_info2 = {
	.scl = {
		.i2c_mode = MX6Q_PAD_GPIO_3__I2C3_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_GPIO_3__GPIO1_IO03 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(1, 3)
	},
	.sda = {
		.i2c_mode = MX6Q_PAD_GPIO_16__I2C3_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6Q_PAD_GPIO_16__GPIO7_IO11 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(1, 6)
	}
};

static struct i2c_pads_info mx6dl_i2c_pad_info3 = {
	.scl = {
		.i2c_mode = MX6DL_PAD_NANDF_WP_B__I2C4_SCL 	| MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_NANDF_WP_B__GPIO6_IO09 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(6, 9)
	},
	.sda = {
		.i2c_mode = MX6DL_PAD_NANDF_CS3__I2C4_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gpio_mode = MX6DL_PAD_NANDF_CS3__GPIO6_IO16 | MUX_PAD_CTRL(I2C_PAD_CTRL),
		.gp = IMX_GPIO_NR(6, 16)
	}
};

#endif
