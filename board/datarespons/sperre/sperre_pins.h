#ifndef __SPERRE_PINS_H__
#define __SPERRE_PINS_H__

static iomux_v3_cfg_t const uart1_pads[] = {
	MX6_PAD_CSI0_DAT10__UART1_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_CSI0_DAT11__UART1_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
};

static iomux_v3_cfg_t const uart2_pads[] = {
	MX6_PAD_EIM_D26__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
	MX6_PAD_EIM_D27__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
};

static iomux_v3_cfg_t const enet_pads[] = {
	MX6_PAD_RGMII_RD0__RGMII_RD0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_RD1__RGMII_RD1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_RD2__RGMII_RD2	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_RD3__RGMII_RD3	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_RX_CTL__RGMII_RX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_RXC__RGMII_RXC	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TD0__RGMII_RD0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TD1__RGMII_RD1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TD2__RGMII_RD2	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TD3__RGMII_RD3	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TX_CTL__RGMII_TX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_RGMII_TXC__RGMII_TXC	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET_MDIO__RGMII_MDIO	| MUX_PAD_CTRL(ENET_PAD_CTRL),
	MX6_PAD_ENET_MDC__RGMII_MDC	|	MUX_PAD(ENET_PAD_CTRL),
	MX6_PAD_ENET_REF_CLK__ENET_REF_CLK	|	MUX_PAD(ENET_PAD_CTRL),
	/* AR8033 PHY Reset */
	MX6_PAD_ENET_CRS_DV__RGMII_nRST	|	MUX_PAD(NO_PAD_CTRL),	/* Phy reset (low) / GPIO1[25] (high/out) */
	MX6_PAD_ENET_RXD1__RGMII_INT	|	MUX_PAD(NO_PAD_CTRL),	/* Phy int / GPIO1[26] (high/in) */
};

static iomux_v3_cfg_t const usb_otg_pads[] = {
	MX6_PAD_EIM_D21__USB_OTG_OC	|	MUX_PAD_CTRL(NO_PAD_CTRL),
	/* line below is wrong, there is not USB_OTG_PWR_EN in mx6dl_pins.h, should be USB_OTG_PWR */
	//MX6_PAD_EIM_D22__USB_OTG_PWR_EN	|	MUX_PAD_CTRL(NO_PAD_CTRL),		/* Output -> low */
	MX6_PAD_EIM_D22__USB_OTG_PWR	|	MUX_PAD_CTRL(NO_PAD_CTRL),		/* Output -> low */
	MX6_PAD_ENET_RX_ER__USB_OTG_ID 	| MUX_PAD_CTRL(REGINP_PAD_CTRL),	/* TODO: make sure about that */
	MX6_PAD_EIM_D22__USB_OTG_PWR	| MUX_PAD_CTRL(NO_PAD_CTRL),		/* GPIO control */
};

static iomux_v3_cfg_t const usb_pads[] = {
	MX6_PAD_EIM_D30__USB_H1_OC |	MUX_PAD_CTRL(NO_PAD_CTRL),
	/* line below is wrong, there is not USB_H1_PWR_EN in mx6dl_pins.h, should be USB_H1_PWR */
	//MX6_PAD_EIM_D31__USB_H1_PWR_EN	|	MUX_PAD_CTRL(NO_PAD_CTRL),		/* Output -> low */
	MX6_PAD_EIM_D31__USB_H1_PWR	|	MUX_PAD_CTRL(NO_PAD_CTRL),		/* Output -> low */
	MX6_PAD_EIM_D31__GPIO3_IO31	|	MUX_PAD_CTRL(NO_PAD_CTRL),		/* GPIO control */
};

static struct i2c_pads_info i2c_pad_info0 = {
		.scl = {
				.i2c_mode = MX6_PAD_CSI0_DAT9__I2C1_SCL	|	MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gpio_mode = MX6_PAD_CSI0_DAT9__GPIO5_IO27 | MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gp = IMX_GPIO_NR(5, 27)
		},
		.sda = {
			.i2c_mode = MX6_PAD_CSI0_DAT8__I2C1_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gpio_mode = MX6_PAD_CSI0_DAT8__GPIO5_IO26 | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gp = IMX_GPIO_NR(5, 26)
		}
};

static struct i2c_pads_info i2c_pad_info1 = {
		.scl = {
				.i2c_mode = MX6_PAD_KEY_COL3__I2C2_SCL	|	MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gpio_mode = MX6_PAD_KEY_COL3__GPIO4_IO12 | MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gp = IMX_GPIO_NR(4, 12)
		},
		.sda = {
			.i2c_mode = MX6_PAD_KEY_ROW3__I2C2_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gpio_mode = MX6_PAD_KEY_ROW3__GPIO4_IO13 | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gp = IMX_GPIO_NR(4, 13)
		}
};

static struct i2c_pads_info i2c_pad_info2 = {
		.scl = {
				.i2c_mode = MX6_PAD_GPIO_3__I2C3_SCL	|	MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gpio_mode = MX6_PAD_GPIO_3__GPIO1_IO03 | MUX_PAD_CTRL(I2C_PAD_CTRL),
				.gp = IMX_GPIO_NR(1, 3)
		},
		.sda = {
			.i2c_mode = MX6_PAD_GPIO_6__I2C3_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gpio_mode = MX6_PAD_GPIO_6__GPIO1_IO06 | MUX_PAD_CTRL(I2C_PAD_CTRL),
			.gp = IMX_GPIO_NR(1, 6)
		}
};

static iomux_v3_cfg_t const i2c_pads[] = {
	MX6_PAD_CSI0_DAT8__I2C1_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
	MX6_PAD_CSI0_DAT9__I2C1_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
	MX6_PAD_KEY_ROW3__I2C2_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
	MX6_PAD_KEY_COL3__I2C2_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
	MX6_PAD_GPIO_6__I2C3_SDA | MUX_PAD_CTRL(I2C_PAD_CTRL),
	MX6_PAD_GPIO_3__I2C3_SCL | MUX_PAD_CTRL(I2C_PAD_CTRL),
};

static iomux_v3_cfg_t const ecspi3_pads[] = {
	/*MX6_PAD_DISP0_DAT0__SPI3_NOR_CLK 	| MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_DISP0_DAT1__SPI3_NOR_MOSI 	| MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_DISP0_DAT2__SPI3_NOR_MISO 	| MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_DISP0_DAT3__SPI3_NOR_CS0 	| MUX_PAD_CTRL(REGINP_PAD_CTRL),*/	/* Use GPIO for CS */
	// There are no such a FUNCTIONS in mx6dl_pins -> SPI3_NOR_*, correct setup below
	MX6_PAD_DISP0_DAT0__ECSPI3_SCLK | MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_DISP0_DAT1__ECSPI3_MOSI | MUX_PAD_CTRL(SPI_PAD_CTRL),
	MX6_PAD_DISP0_DAT2__ECSPI3_MISO | MUX_PAD_CTRL(SPI_PAD_CTRL),
	//MX6_PAD_DISP0_DAT3__ECSPI3_SS0 	| MUX_PAD_CTRL(REGINP_PAD_CTRL),	/* Use GPIO for CS */
	MX6_PAD_DISP0_DAT3__GPIO4_IO24	| MUX_PAD_CTRL(REGINP_PAD_CTRL),	/* Use GPIO for CS */
};

static iomux_v3_cfg_t const usdhc4_pads[] = {
	MX6_PAD_SD4_CLK__SD4_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_CMD__SD4_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT0__SD4_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT1__SD4_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT2__SD4_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT3__SD4_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT4__SD4_DATA4 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT5__SD4_DATA5 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT6__SD4_DATA6 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_SD4_DAT7__SD4_DATA7 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
	MX6_PAD_GPIO_7__MMC_RST    | MUX_PAD_CTRL(USDHC_PAD_CTRL),	/* eMMC reset | GPIO1[07] Output high */
};

static iomux_v3_cfg_t const gpio_pads[] = {
	MX6_PAD_GPIO_0__LCD_PPEN	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[00] Output low */
	MX6_PAD_KEY_ROW4__BL_EN	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO4[15] Output low */
	MX6_PAD_GPIO_2__GPIO_Debug_LED	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[02] Output high */
	MX6_PAD_GPIO_4__RTC_IRQ	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[04] Output high */
	MX6_PAD_GPIO_5__IO_INT	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[05] Input high */
	MX6_PAD_GPIO_8__IO_RESET	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[08] Output high */
	MX6_PAD_GPIO_17__TOUCH_RES	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO7[12] Output high */
	MX6_PAD_GPIO_1__TOUCH_IRQ	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[01] Output high */
	MX6_PAD_GPIO_18__PMIC_INT_B	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO7[13] Output high */
	MX6_PAD_EIM_D31__PMIC_INT_B	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO7[13] Output high */
	MX6_PAD_GPIO_19__RS485_PW	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO4[05] Output high */
	MX6_PAD_GPIO_9__ADS1248_RESET	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[09] Output high */
	MX6_PAD_GPIO_16__ADS1248_START	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO1[16] Output high */
	MX6_PAD_KEY_COL4__SPI_NOR_WP	|	MUX_PAD(NO_PAD_CTRL),		/* GPIO4[14] Output high */
	MX6_PAD_SD1_DAT3__PWM1	|	MUX_PAD(NO_PAD_CTRL),
};

static iomux_v3_cfg_t const eim_pads[] = {
	MX6_PAD_EIM_LBA__EIM_LBA	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_RW__EIM_RW	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A16__EIM_A16	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A17__EIM_A17	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A18__EIM_A18	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A19__EIM_A19	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A20__EIM_A20	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A21__EIM_A21	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A22__EIM_A22	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A23__EIM_A23	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_A24__EIM_A24	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_EB2__EIM_EB2	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_EB3__EIM_EB3	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_WAIT__EIM_WAIT	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_EB0__EIM_EB0	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_EB1__EIM_EB1	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA0__EIM_DA0	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA1__EIM_DA1	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA2__EIM_DA2	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA3__EIM_DA3	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA4__EIM_DA4	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA5__EIM_DA5	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA6__EIM_DA6	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA7__EIM_DA7	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA8__EIM_DA8	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA9__EIM_DA9	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA10__EIM_DA10	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA11__EIM_DA11	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA12__EIM_DA12	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA13__EIM_DA13	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA14__EIM_DA14	|	MAX_PAD(NO_PAD_CTRL),
	MX6_PAD_EIM_DA15__EIM_DA15	|	MAX_PAD(NO_PAD_CTRL),
};

static iomux_v3_cfg_t const other_pads[] = {
	MX6_PAD_EIM_D29__UART2_RTS_B	| MUX_PAD_CTRL(NO_PAD_CTRL),
};

#endif
